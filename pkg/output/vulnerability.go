package output

type Vulnerability struct {
	VulnerabilityID  string
	DataSource       *DataSource
	Title            string
	Description      string
	Severity         string
	SeveritySource   string
	PkgName          string
	PkgPath          string
	PrimaryURL       string
	InstalledVersion string
	FixedVersion     string
	References       []string
	CVSS             map[string]interface{}
}

type DataSource struct {
	ID   string
	Name string
	URL  string
}

func (v Vulnerability) GetType() IssueType {
	return IssueTypeVulnerability
}

func (v Vulnerability) GetID() string {
	return v.VulnerabilityID
}

func (v Vulnerability) GetTitle() string {
	return v.Title
}

func (v Vulnerability) GetDescription() string {
	return v.Description
}

func (v Vulnerability) GetDatasourceName() string {
	if v.DataSource != nil {
		return v.DataSource.Name
	}
	return ""
}

func (v Vulnerability) GetSeverity() string {
	return v.Severity
}

func (v Vulnerability) GetSeveritySource() string {
	return v.SeveritySource
}

func (v Vulnerability) GetPackageName() string {
	return v.PkgName
}

func (v Vulnerability) GetPackagePath() string {
	return v.PkgPath
}

func (v Vulnerability) GetPrimaryURL() string {
	return v.PrimaryURL
}

func (v Vulnerability) GetInstalledVersion() string {
	return v.InstalledVersion
}

func (v Vulnerability) GetFixedVersion() string {
	return v.FixedVersion
}

func (v Vulnerability) GetReferences() []string {
	return v.References
}

func (v Vulnerability) GetCVSS() map[string]interface{} {
	return v.CVSS
}

func (v Vulnerability) GetMisconfigurationType() string {
	return ""
}

func (v Vulnerability) GetMessage() string {
	return ""
}

func (v Vulnerability) GetResolution() string {
	return ""
}

func (v Vulnerability) GetStatus() string {
	return ""
}

func (v Vulnerability) GetCauseMetadata() CauseMetadata {
	return CauseMetadata{}
}

func (v Vulnerability) GetMatch() string {
	return ""
}

func (v Vulnerability) GetDeleted() string {
	return "No"
}
